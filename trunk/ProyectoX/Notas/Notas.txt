A mejorar:
+ matar UpNeeders!
Escenario.javaDocClase
Escenario.transparentarCursor
Escenario.run
Escenario.imprimirBloque

A comentar:


Rediagramar las clases Actor y derivadas para acomodar los métodos: caer, morir, colisionar, efectoGravedad.

Posible Código como comentado:
ControlCentral.actores
Escenario.imprimirBloque

Imprimir posición lógica y gráfica de un Actor:
int x = 0; int y = 0;

if ((x != ((Actor) controlCentral.getJugador().personaje()).getCeldaActual().getPosFila())
				    || (y != ((Actor) controlCentral.getJugador().personaje()).getCeldaActual().getPosColumna()))
				    {
					System.out.println(((Actor) controlCentral.getJugador().personaje()).getCeldaActual().getPosFila() + "," +
					           ((Actor) controlCentral.getJugador().personaje()).getCeldaActual().getPosColumna());
					System.out.println(((Actor) controlCentral.getJugador().personaje()).getSpriteManager().posicion()[0] +","+ 
					           ((Actor) controlCentral.getJugador().personaje()).getSpriteManager().posicion()[1]);
					 x = ((Actor) controlCentral.getJugador().personaje()).getCeldaActual().getPosFila();
				     y = ((Actor) controlCentral.getJugador().personaje()).getCeldaActual().getPosColumna();
				    }
					
Métodos Test
public void test ()
	{
		int x = 0; int y = 0;
		double spx = 0; double spy = 0;
		int pg = -1;
		int i = 0;
		while (true)
		{
			/*if (!Tescenario.isAlive())
			{
				System.out.println("MUERTO Tescenario");
				System.exit(0);
			}
			if (!Tjugador.isAlive())
			{
				System.out.println("MUERTO Tjugador");
				System.exit(0);
			}
			if (!Tgravedad.isAlive())
			{
				System.out.println("MUERTO Tgravedad");
				System.exit(0);
			}*/
			/*try {
			Thread.sleep(getSleepTime());
			} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			}*/
			/*{
				if ((x != ((Actor) jugador.personaje()).getCeldaActual().getPosFila())
					    || (y != ((Actor) jugador.personaje()).getCeldaActual().getPosColumna()))
					    {
						System.out.println("En i " + i +":");
						System.out.println(((Actor) jugador.personaje()).getCeldaActual().getPosFila() + "," +
						           ((Actor) jugador.personaje()).getCeldaActual().getPosColumna());
						System.out.println(((Actor) jugador.personaje()).getSpriteManager().posicion()[0] +","+ 
						           ((Actor) jugador.personaje()).getSpriteManager().posicion()[1]);
						 x = ((Actor) jugador.personaje()).getCeldaActual().getPosFila();
					     y = ((Actor) jugador.personaje()).getCeldaActual().getPosColumna();
					    }
			}*/
			{
				//if (i<10)
					//testMarioBot();
			}
			/*{
				if ((spx != ((Actor) jugador.personaje()).spriteManager.posicion()[0])
					    || (spy != ((Actor) jugador.personaje()).spriteManager.posicion()[1]))
					    {
				        System.out.println("En i " + i + " Cambio:");
						System.out.println(((Actor) jugador.personaje()).getCeldaActual().getPosFila() + "," +
						           ((Actor) jugador.personaje()).getCeldaActual().getPosColumna());
						System.out.println(((Actor) jugador.personaje()).getSpriteManager().posicion()[0] +","+ 
						           ((Actor) jugador.personaje()).getSpriteManager().posicion()[1]);
						 spx = ((Actor) jugador.personaje()).spriteManager.posicion()[0];
					     spy = ((Actor) jugador.personaje()).spriteManager.posicion()[1];
					    }
			}*/
			{
				spx = ((Actor) jugador.personaje()).spriteManager.posicion()[0];
			    spy = ((Actor) jugador.personaje()).spriteManager.posicion()[1];
				if (
						((spx - ((Actor) jugador.personaje()).spriteManager.posicion()[0]) > 0.5)
					 || ((spx - ((Actor) jugador.personaje()).spriteManager.posicion()[0]) < - 0.5)
					 ||	((spy - ((Actor) jugador.personaje()).spriteManager.posicion()[1]) > 0.5)
				     || ((spy - ((Actor) jugador.personaje()).spriteManager.posicion()[1]) < - 0.5)
					)
					    {
				          System.out.println("ERROR");
				          ventanaPrincipal.salir();
					    }
			}
			    /*if ( pg != ((Actor) jugador.personaje).PG)
			    {
			    	System.out.println(((Actor) jugador.personaje).PG);
			    	pg = ((Actor) jugador.personaje).PG;
			    	//System.out.println(pg);
			    }*/
			/*{
				if ((5 == ((Actor) jugador.personaje()).getCeldaActual().getPosFila())
					    && (3 == ((Actor) jugador.personaje()).getCeldaActual().getPosColumna()))
					((Actor) jugador.personaje()).moverseAcelda(
					((Actor) jugador.personaje()).getCeldaActual().getBloque().getCelda(0, 3));
			}*/
			/*{
			if ((1 == ((Actor) jugador.personaje()).getCeldaActual().getPosFila())
				    && (3 == ((Actor) jugador.personaje()).getCeldaActual().getPosColumna()))
				System.out.println("CHAN");
			}*/
			i++;
		}
	}
	//boolean izq = false;
	int h1 = 0;// int h2 = 0; int h3 = 0;
	//Random random = new Random ();
	public void testMarioBot ()
	{
		if (h1 < 4)
		{
			jugador.personaje().arriba();
			jugador.personaje().derecha();
			h1++;
		}
		else
			if (h1 < 8)
			{
				jugador.personaje().derecha();
				h1++;
			}
			/*else
				if (h1 < 9)
				{
					capture = true;
					h1++;
				}*/
		/*h1 = random.nextInt();
		h2 = random.nextInt();
		if ((h2 % 2) == 0)
			h2++;
		h1 *= h2;
		if ((h1 % 9) == 0)
			h3 = random.nextInt (7);
		if (h3 == 0)
		{
		if ((h1 % 2) == 0)
		{
			if (((h1 % 4) == 0) || ((h1 % 6) == 0) || ((h1 % 8) == 0))
				jugador.personaje().izquierda();
			else
				jugador.personaje().derecha();
		
			if ((h1 % 11) == 0)
				jugador.personaje().arriba();
		}
		}
		else
		{
			jugador.personaje().arriba();
			h3--;
		}*/
		/*h++;
		if (izq)
			jugador.personaje().izquierda();
		else
			jugador.personaje().derecha();
		if (h == 1)
		{
			h = 0;
			izq = !izq;
		}*/
	}
	
	
Del SpriteManager:

/*if (((posX % (int) posX) != 0.0) || ((posY % (int) posY) != 0.0))
			{//Si alguna de los posiciones tiene decimal, significa que está en medio de un movimiento, y se debe completar el movimiento.
				posX = X;
				posY = Y;
			}
			else
			{
				if ((int) posX != X)
					if ((int) posX < X)
						posX += 0.5;
					else
						posX -= 0.5;
				if ((int) posY != Y)
					if ((int) posY < Y)
						posY += 0.5;
					else
						posY -= 0.5;
				
				upNeeder.addWorker(
						new Worker ()
						{
							public void work() throws Exception
							{
								act();
							}
						});
			}*/